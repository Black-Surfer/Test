// <auto-generated />
using System;
using EminentTest.Abstraction.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EminentTest.Abstraction.Migrations
{
    [DbContext(typeof(EminentTestContext))]
    partial class EminentTestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EminentTest.DB.Model.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("EminentTest.DB.Model.Lookup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LookupDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LookupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LookupType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LookupValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lookups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6621072c-5025-426e-9925-103f7ec23878"),
                            LookupDescription = "Male",
                            LookupName = "Gender",
                            LookupType = "Gender",
                            LookupValue = 1
                        },
                        new
                        {
                            Id = new Guid("d745ab15-3c96-4753-8502-c9dcbc8a6e12"),
                            LookupDescription = "Female",
                            LookupName = "Gender",
                            LookupType = "Gender",
                            LookupValue = 0
                        },
                        new
                        {
                            Id = new Guid("add0d0ed-ad4e-4370-a909-0e8e463b7627"),
                            LookupDescription = "Active",
                            LookupName = "StatusName",
                            LookupType = "Status",
                            LookupValue = 10
                        },
                        new
                        {
                            Id = new Guid("645b8841-a741-4e6f-8f6c-a83e9cc07531"),
                            LookupDescription = "Inactive",
                            LookupName = "StatusName",
                            LookupType = "Status",
                            LookupValue = 20
                        },
                        new
                        {
                            Id = new Guid("9e866bf0-7617-493b-9fdc-d518aab468be"),
                            LookupDescription = "Indoor",
                            LookupName = "EquipmentTypeName",
                            LookupType = "EquipmentType",
                            LookupValue = 30
                        },
                        new
                        {
                            Id = new Guid("25418a27-5c46-43e5-9066-b81b76b56209"),
                            LookupDescription = "Outdoor",
                            LookupName = "EquipmentTypeName",
                            LookupType = "EquipmentType",
                            LookupValue = 60
                        });
                });

            modelBuilder.Entity("EminentTest.DB.Model.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
